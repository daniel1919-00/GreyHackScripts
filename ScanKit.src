//
// ScanKit â€“ A simple script to quickly scan the network for devices with open ports
// Author: _daniel1919 (https://github.com/daniel1919-00)
//

#import "GrayKit/GrayKit.src"

GrayKit.printHeader("ScanKit", "_daniel1919(https://github.com/daniel1919-00)", "A simple script to quickly scan the network " + GrayKit.NEW_LINE + " for devices with open ports." + GrayKit.NEW_LINE + GrayKit.NEW_LINE + "Note: Pass an ip to target specific machines.")

metax = include_lib("/lib/metaxploit.so")
if metax == null then
    GrayKit.printWarning("Metaxploit library(metaxploit.so) missing, some information will not be available!")
else
    GrayKit.printOk("Metaxploit library loaded, additional information will be available.")
end if

if params.len > 0 then
    targetIp = params[0]
    if is_valid_ip(targetIp) == 0 then
        GrayKit.printError("Invalid IP address given [" + targetIp + "]!")
        exit
    end if

    GrayKit.print("Fetching details for target IP address [" + targetIp + "]")

    if is_lan_ip(targetIp) then
        router = get_router
    else
        router = get_router(targetIp)
    end if

    if router == null then
        GrayKit.printError("IP address not found [" + targetIp + "]")
        exit
    end if

    targetIpAddresses = [targetIp]
else 
    router = get_router
    targetIpAddresses = GrayKit.Network.sortIps(router.devices_lan_ip)
end if

printDeviceInfo = function(ip)
    if ip == router.public_ip or ip == router.local_ip then
        firewallRules = router.firewall_rules
        if firewallRules.len == 0 then
            firewallRules = ["N/A"]
        end if

        print("")
        GrayKit.print("[Router]")
        GrayKit.print("|- Local IP: " + router.local_ip)
        GrayKit.print("|- Public IP: " + router.public_ip)
        GrayKit.print("|- Kernel version: " + router.kernel_version)
        GrayKit.print("|- Firewall Rules: " + firewallRules.join(", "))
        printHeader = false
        ports = router.used_ports
    else
        ports = router.device_ports(ip)
        GrayKit.print("[" + ip + "]")
    end if

    adminInfo = GrayKit.Network.whois(ip)
    GrayKit.print("|- Domain: " + adminInfo.domain)

    if adminInfo.admin != "" then
        GrayKit.print("  |- Admin: " + adminInfo.admin)
        GrayKit.print("  |- Email: " + adminInfo.email)
        GrayKit.print("  |- Phone: " + adminInfo.phone)
    end if

    if ports != null and ports.len > 0 then
        if metax != null then
            netSession = metax.net_use(ip, ports[0].port_number)
            if netSession != null then
                GrayKit.print("|- User Accounts: " + netSession.get_num_users)
                GrayKit.print("|- Active Users: " + netSession.is_any_active_user)
                GrayKit.print("|- Root User Active: " + netSession.is_root_active_user)
                GrayKit.print("|- Port Forwards: " + netSession.get_num_portforward)
            end if
        end if
    else
        ports = []
    end if

    GrayKit.print("|- Open ports")

    openPortsFound = false
    for port in ports
        if port.is_closed then 
            continue
        end if

        openPortsFound = true
        GrayKit.print("  |- " +  port.port_number + ": " + router.port_info(port))
    end for

    if not openPortsFound then
        GrayKit.print("  |- N/A")
    end if
end function

for ip in targetIpAddresses
    printDeviceInfo(ip)
    print("")
end for