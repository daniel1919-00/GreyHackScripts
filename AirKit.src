// 
// AirKit â€“ A simple script to quickly obtain and connect to a vulnerable wifi network
// Author: _daniel1919 (https://github.com/daniel1919-00)
// 
// Automates Wi-Fi network attacks by orchestrating airmon, aireplay, and aircrack.
// 

#import "GrayKit/GrayKit.src"

crypto = include_lib("/lib/crypto.so")
CurrentShell = get_shell
HostComputer = CurrentShell.host_computer

GrayKit.printHeader("AirKit", "_daniel1919(https://github.com/daniel1919-00)", "Handles airmon, aireplay and aircrack, " + GrayKit.NEW_LINE + " so you don't have to." + GrayKit.NEW_LINE + GrayKit.NEW_LINE + "Note: Use -a flag to toggle auto selection mode, " + GrayKit.NEW_LINE + " this will sort all networks by strength " + GrayKit.NEW_LINE + " and will attempt to hack each one,  " + GrayKit.NEW_LINE + " only stopping at the first successful hack .")

manualMode = true
if GrayKit.Cli.hasFlag("-a") then
    manualMode = false
    GrayKit.print("Operating mode: AUTO")
else
    GrayKit.print("Operating mode: MANUAL")
end if

devices = HostComputer.network_devices
deviceList = devices.trim.split(GrayKit.NEW_LINE)

if deviceList.len == 0 then
    GrayKit.printError("No network devices found on this system!")
    exit()
end if

if deviceList.len > 1 then
    GrayKit.printWarning("Multiple network devices found ("+deviceList.len+")!")
    table = ["INTERFACE CHIPSET MONITORING_SUPPORT"]
    for device in deviceList
        table.push(device)
    end for
    GrayKit.print(format_columns(table.join(GrayKit.NEW_LINE)))

    networkInterface = user_input("Net interface(empty for wlan0): ", false)
    if networkInterface == "" then
        networkInterface = "wlan0"
    end if
else
    networkInterface = deviceList[0].split(" ")[0]
end if

networks = HostComputer.wifi_networks(networkInterface)
GrayKit.print("Scanning for WIFI networks on ["+networkInterface+"]...")

if networks == null or not networks.len then
    GrayKit.printError("No networks where found on the given network interface ["+networkInterface+"]!")
    exit()
end if

wifiEntryToInfo = function(wifiEntry)
    parsed = wifiEntry.split(" ")

    power = parsed[1][:-1].to_int
    potentialAcks = round(300000 / (power + 15))

    return [parsed[0], parsed[2], potentialAcks, power]
end function

crackWifi = function(targetNetwork)
    airmonResult = crypto.airmon("start", networkInterface)
    if typeof(airmonResult) == "string" then
        GrayKit.printError("There was an error while switching monitoring mode: " + airmonResult)
        exit()
    end if

    aireplayResult = crypto.aireplay(targetNetwork.bssid, targetNetwork.essid, targetNetwork.potentialAcks)
    crypto.airmon("stop", networkInterface)

    if aireplayResult != null then
        GrayKit.printError("aireplay error: " + aireplayResult)
        exit()
    end if

    aireplayOutputFile = HostComputer.File("file.cap")

    if aireplayOutputFile == null then
        GrayKit.printError("Failed to find aireplay output file.cap!")
        exit()
    end if

    wifiPassword = crypto.aircrack(aireplayOutputFile.path)

    aireplayOutputFile.delete

    return wifiPassword
end function

wifiTargetToFormattedText = function(wifi)
    return "ESSID: " + wifi.essid + " | POWER: " + wifi.power + "% | BSSID: " + wifi.bssid + " | Potential ACKs: " + wifi.potentialAcks
end function

wifiTargets = []
for network in networks
    parsed = wifiEntryToInfo(network)
    wifiTarget = {}
    wifiTarget.bssid = parsed[0]
    wifiTarget.essid = parsed[1]
    wifiTarget.potentialAcks = parsed[2]
    wifiTarget.power = parsed[3]
    wifiTargets.push(wifiTarget)
end for

wifiTargets.sort("power", 0)

if manualMode then
    GrayKit.print("Select target network from the table below.")
    table = ["INDEX ESSID BSSID POWER ACKS"]

    wifiIndex = 0
    for wifiTarget in wifiTargets
        table.push(wifiIndex + " " + wifiTarget.essid + " " +  wifiTarget.bssid + " " +  wifiTarget.power + " " +  wifiTarget.potentialAcks)
        wifiIndex = wifiIndex + 1
    end for    

    GrayKit.print(format_columns(table.join(GrayKit.NEW_LINE)))
    wifiIndex = user_input("Target network index: ").to_int
    if typeof(wifiIndex) != "number" or (wifiIndex < 0 or wifiIndex > wifiTargets.len - 1) then
        GrayKit.printWarning("Invalid index entered, using index 0.")
        wifiIndex = 0
    end if

    wifiTargets = [wifiTargets[wifiIndex]]
end if

for wifiTarget in wifiTargets
    GrayKit.print("Attempting to crack the password for " + wifiTargetToFormattedText(wifiTarget))
    wifiPassword = crackWifi(wifiTarget)
    if wifiPassword == null then
        if manualMode then
            GrayKit.printError("Failed to crack network!")
        else
            GrayKit.printWarning("Failed to crack network! Trying next network on list.")
        end if

        continue
    end if

    connectToWifi = user_input("Wifi password found [" + wifiPassword + "], connect to this network? [y/n] ").lower == "y"

    if connectToWifi then
        connectionResult = HostComputer.connect_wifi(networkInterface, wifiTarget.bssid, wifiTarget.essid, wifiPassword)

        if typeof(connectionResult) == "string" then
            GrayKit.printError("There was an error while connecting to new Wifi: " + connectionResult)
        else
            GrayKit.printOk("Connected to new Wifi ["+ wifiTarget.essid +"] successfully.")
        end if
    end if

    break
end for